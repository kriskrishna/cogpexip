{"version":3,"file":"returnPexipLicenses.js","sourceRoot":"","sources":["../../api/returnPexipLicenses.ts"],"names":[],"mappings":"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","sourcesContent":["import * as util from \"util\";\nimport * as fs from \"fs\";\nimport * as Buffer from \"buffer\";\nimport * as child from \"child_process\";\nimport {isNullOrUndefined} from \"util\";\nimport * as lodash from \"lodash\";\nimport * as sleep from \"system-sleep\";\nimport * as newman from \"newman\";\nimport {Request, Response} from \"restify\";\nimport {PexipManagerService} from \"./services/PexipManagerService\";\n\n\nfunction deleteandReturnPexipLicenses() {\n\n    let postmanenvjson = null;\n    let terraFormState = null;\n    let arg = null;\n\n    process.argv.forEach(function (args) {\n        if (args.indexOf(\"postmanenvfile\") >= 1) {\n            postmanenvjson = arg.split(\"=\")[1];\n        }\n        if (args.indexOf(\"terraformenvfile\") >= 1) {\n            terraFormState = arg.split(\"=\")[1];\n        }\n    });\n\n    postmanenvjson = util.isNullOrUndefined(postmanenvjson) ? \"pexip-gcp-test.postman_environment.json\" : postmanenvjson;\n    terraFormState = util.isNullOrUndefined(terraFormState) ? \"terraform.tfstate\" : terraFormState;\n\n    let fdPostmanEnvFile = fs.openSync(postmanenvjson, \"r\");\n    let nFileSize = 10 * 1 * 1024 * 1024;\n    let readBuffer = new Buffer.Buffer(nFileSize);\n    let nBytesRead = fs.readSync(fdPostmanEnvFile, readBuffer, 0, nFileSize, 0);\n    let postmanEnv = JSON.parse(readBuffer.toString('utf8', 0, nBytesRead));\n\n    let fdterraformEnvFile = fs.openSync(terraFormState, \"r\");\n    let nterraformFileSize = 10 * 1 * 1024 * 1024;\n    let readterraformBuffer = new Buffer.Buffer(nterraformFileSize);\n    let nterraformBytesRead = fs.readSync(fdterraformEnvFile, readterraformBuffer, 0, nterraformFileSize, 0);\n    let terraformEnv = JSON.parse(readterraformBuffer.toString('utf8', 0, nterraformBytesRead));\n\n    /*\n     has to be passed in using credhub\n     postmanEnv.values.forEach(function (item) {\n         if (item.key == \"entitlement_id\") {\n\n         }\n     });\n     */\n\n    let mgrPubIp = terraformEnv.modules[0].outputs[\"pexip_mgr_pubip\"].value\n    let mgrPrivateIp = terraformEnv.modules[0].outputs[\"pexip_mgr_privateip\"].value\n\n    var pMgmSvc = new PexipManagerService(\"https://\" + mgrPrivateIp + \"/\", \"admin\", \"XGb/9XTjyjzV0TZASDY3B5KmZ+XcBZmHvLmvI7xlsrg=\");\n\n    pMgmSvc.findLicenses().then(o => {\n        Object.keys(o).forEach(key => {\n            if (key == \"objects\" && o[key].length > 0) {\n                fs.writeFileSync(postmanenvjson, JSON.stringify(postmanEnv));\n\n                newman.run({\n                    collection: './pexip-gcp-return-license.postman_collection.json',\n                    reporters: ['cli'],\n                    insecure: true,\n                    environment: './pexip-gcp-test.postman_environment.json'\n                }, function (err, summary) {\n                    if (err || summary.error) {\n                        console.info('collection run error out - ' + summary.error);\n                        throw err;\n                    }\n                    console.info('collection run complete! iteration - ' + summary.collection);\n                }).on('request', function (err, summary) {\n                    if (err || summary.error) {\n                        console.info('collection run error! request - ' + summary.error);\n                        throw err;\n                    }\n                    console.info('collection run complete! request - ' + summary.response.code);\n                }).on('assertion', function (err, summary) {\n                    if (err || summary.error) {\n                        console.info('collection run error! assertion - ' + summary.error.name + \" \" + summary.error.message);\n                        process.abort()\n                        throw err\n                        throw new Error(summary.error.name + \" \" + summary.error.message);\n                    }\n                    console.info('collection run complete! assertion - ' + summary.collection);\n                }).on('done', function (err, summary) {\n                    if (err || summary.error) {\n                        console.info('collection run error! done - ' + summary.error);\n                        throw err;\n                    }\n                    console.info('collection run complete! done - ' + summary.collection);\n                });\n\n                sleep(30 * 1000);\n            }\n            else {\n                if (key == \"objects\") {\n                    console.info('No licence found');\n                }\n            }\n        })\n    }).catch( error => {\n        console.error(error)\n        process.abort()\n    })\n\n}\n\ndeleteandReturnPexipLicenses();"]}