{"version":3,"file":"PexipManagerService.js","sourceRoot":"","sources":["../../../api/services/PexipManagerService.ts"],"names":[],"mappings":";;AAEA,+EAA0E;AAE1E;;;;;;;;;GASG;AACH;IAII,YAAY,UAAiB,EAAE,QAAgB,EAAE,IAAa;QAC1D,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,CAAA;QACzC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,yDAA2B,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IACjF,CAAC;IAEM,kBAAkB;QACrB,IAAI,IAAI,GAAG,6CAA6C,CAAC;QACzD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAEM,YAAY;QACf,IAAI,IAAI,GAAG,uCAAuC,CAAC;QACnD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAGM,eAAe;QAClB,IAAI,IAAI,GAAG,6CAA6C,CAAC;QACzD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAGM,gBAAgB;QACnB,IAAI,IAAI,GAAG,2CAA2C,CAAC;QAEvD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAEM,YAAY;QACf,IAAI,IAAI,GAAG,6CAA6C,CAAC;QAEzD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAGM,YAAY;QACf,IAAI,IAAI,GAAG,sCAAsC,CAAC;QAElD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;CAIJ;AAhDD,kDAgDC","sourcesContent":["import * as restify from \"restify-clients\";\nimport {PexipInfo} from \"../models/PexipInfo\";\nimport {PexipNodesInfoServiceClient} from \"./PexipNodesInfoServiceClient\";\n\n/**\n * @description Implements PexipMgr Service using restify client and get the Meeting info.\n * @export\n * @class PexipMgrService\n * @implements {PexipMgrService}\n *\n * //sslRootCAs.addFile(\"/Users/m_697556/workspace/cogpexip/api/pexip101.mc.iconf.net.pem\");\n //var https = require('https');\n //https.globalAgent.options.ca=sslRootCAs;\n */\nexport class PexipManagerService {\n    private serviceURL:string;\n    private svcClient : PexipNodesInfoServiceClient;\n\n    constructor(serviceURL:string, userName: string, pass : string) {\n        console.info(\"ServiceURL: \" + serviceURL)\n        this.serviceURL = serviceURL;\n        this.svcClient = new PexipNodesInfoServiceClient(serviceURL, userName, pass);\n    }\n\n    public findSystemLocation() {\n        var path = \"api/admin/configuration/v1/system_location/\";\n        return this.svcClient.getInfoBasicAuth(path);\n    }\n\n    public findWorkerVM() {\n        var path = \"api/admin/configuration/v1/worker_vm/\";\n        return this.svcClient.getInfoBasicAuth(path);\n    }\n\n\n    public findSysLocation() {\n        var path = \"api/admin/configuration/v1/system_location/\";\n        return this.svcClient.getInfoBasicAuth(path);\n    }\n\n\n    public findManagementVM() {\n        var path = \"api/admin/configuration/v1/management_vm/\";\n\n        return this.svcClient.getInfoBasicAuth(path);\n    }\n\n    public findTLSCerts() {\n        var path = \"api/admin/configuration/v1/tls_certificate/\";\n\n        return this.svcClient.getInfoBasicAuth(path);\n    }\n\n\n    public findLicenses() {\n        var path = \"api/admin/configuration/v1/licence//\";\n\n        return this.svcClient.getInfoBasicAuth(path);\n    }\n\n\n\n}\n"]}